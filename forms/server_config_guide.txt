# Server Configuration Guide for PHP Email

## Checking if mail() Function Works

1. Create a simple test script (e.g., `mail_test.php`) with the following content:

```php
<?php
$to = "your-email@example.com"; // Replace with your email
$subject = "Test Email";
$message = "This is a test email to verify that the PHP mail() function is working.";
$headers = "From: webmaster@example.com" . "\r\n" .
           "Reply-To: webmaster@example.com" . "\r\n" .
           "X-Mailer: PHP/" . phpversion();

if(mail($to, $subject, $message, $headers)) {
    echo "Test email sent successfully!";
} else {
    echo "Failed to send test email.";
}

// Display mail configuration
echo "<h3>Mail Configuration:</h3>";
echo "<pre>";
var_dump(ini_get('sendmail_path'));
echo "SMTP: " . ini_get('SMTP') . "\n";
echo "smtp_port: " . ini_get('smtp_port') . "\n";
echo "</pre>";
?>
```

2. Upload this file to your server and access it through a web browser.
3. Check if you receive the test email and review the configuration information displayed.

## Common Server Configurations

### Shared Hosting

Most shared hosting providers have mail servers pre-configured. You typically don't need to do anything special to use the mail() function.

### VPS or Dedicated Servers

If you're running your own server, you'll need to:

1. Install and configure a mail transfer agent (MTA) like Postfix, Sendmail, or Exim.
2. For Ubuntu/Debian:
   ```
   sudo apt-get update
   sudo apt-get install postfix
   ```
   Follow the prompts to configure Postfix.

3. For CentOS/RHEL:
   ```
   sudo yum install postfix
   sudo systemctl start postfix
   sudo systemctl enable postfix
   ```

4. Ensure PHP is configured to use the installed mail server by checking your php.ini file:
   - Find the [mail function] section
   - Set sendmail_path to the path of your MTA (e.g., `/usr/sbin/sendmail -t -i`)

### Local Development Environment

For local development, consider these options:

1. **MailHog**: A testing tool that captures emails sent by your application
   - Install MailHog (varies by platform)
   - Configure PHP to use MailHog (typically by setting sendmail_path)

2. **Mailtrap**: A service that captures emails for testing
   - Sign up for a free account at mailtrap.io
   - Configure PHP to use SMTP with your Mailtrap credentials

3. **XAMPP/WAMP/MAMP**: Configure the bundled mail server
   - For XAMPP, edit php.ini and set:
     ```
     [mail function]
     SMTP = localhost
     smtp_port = 25
     sendmail_from = your-email@example.com
     ```

## Alternatives to mail() Function

If you can't get the mail() function working, consider these alternatives:

### 1. PHPMailer

1. Install PHPMailer via Composer:
   ```
   composer require phpmailer/phpmailer
   ```

2. Example usage:
   ```php
   <?php
   use PHPMailer\PHPMailer\PHPMailer;
   use PHPMailer\PHPMailer\Exception;

   require 'vendor/autoload.php';

   $mail = new PHPMailer(true);
   try {
       // Server settings
       $mail->isSMTP();
       $mail->Host       = 'smtp.example.com';
       $mail->SMTPAuth   = true;
       $mail->Username   = 'user@example.com';
       $mail->Password   = 'password';
       $mail->SMTPSecure = PHPMailer::ENCRYPTION_STARTTLS;
       $mail->Port       = 587;

       // Recipients
       $mail->setFrom('from@example.com', 'Mailer');
       $mail->addAddress('to@example.com', 'Recipient');

       // Content
       $mail->isHTML(true);
       $mail->Subject = 'Subject';
       $mail->Body    = 'This is the HTML message body';
       $mail->AltBody = 'This is the plain text message body';

       $mail->send();
       echo 'Message has been sent';
   } catch (Exception $e) {
       echo "Message could not be sent. Mailer Error: {$mail->ErrorInfo}";
   }
   ```

### 2. Form Submission Services

1. **Formspree**: 
   - Change your form action to `https://formspree.io/your-email@example.com`
   - No PHP required

2. **FormSubmit**:
   - Change your form action to `https://formsubmit.co/your-email@example.com`
   - No PHP required

### 3. Email API Services

1. **SendGrid**:
   - Sign up for an account
   - Install the SendGrid PHP library: `composer require sendgrid/sendgrid`
   - Use their API to send emails

2. **Mailgun**:
   - Sign up for an account
   - Install the Mailgun PHP library: `composer require mailgun/mailgun-php`
   - Use their API to send emails

## Troubleshooting

1. **Check error logs**: Look in your PHP and server error logs for mail-related errors
2. **Spam filters**: Check spam folders if emails aren't arriving
3. **Email authentication**: Implement SPF, DKIM, and DMARC to improve deliverability
4. **Firewall issues**: Ensure your server can connect to the required mail ports (25, 465, 587)
5. **ISP blocking**: Some ISPs block outgoing mail on port 25; use authenticated SMTP instead
